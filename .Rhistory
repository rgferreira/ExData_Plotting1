install.packages("slidify")
source("hhtp://bioconductor.org/biocLite.R")
source("http://bioconductor.org/biocLite.R")
find_rtools()
find.package("devtools")
clear
above <- function(x, n) {
use <- x > n
x[use]
}
above(x, 12)
x<-1:20
above(x, 12)
y<-readfile(hw1_data.csv)
y<-read.file(hw1_data.csv)
columnmean <- function(y){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[, i])
}
means
}
airquality
columnmean(airquality)
columnmean(complete.cases(airquality))
data<-complete.cases(airquality)
columnmean(data)
columnmean(airquality)
data
data<-airquality(data)
data<-airquality[data]
airquality[data]
airquality[!data]
data<-data([data, ])
data<-data[data, ]
data
data<-airquality[data, ]
data
columnmean(data)
}
add <- function(x, y) {
columnmean2 <- function(y, removeNA = TRUE){
columnmean2 <- function(y, removeNA = TRUE){
columnmean2(data)
columnmean2(data)
columnmean(data)
columnmean2 <- function(y, removeNA = TRUE){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[, i], na.rm = removeNA)
}
means
}
columnmean2(airquality)
columnmean(airquality)
columnmean2(airquality, FALSE)
y<-10
f<-function(x){
y<-2
y^2 + g(x)
}
g<-function(x){
x*y
}
f(3)
cube <- function(x,n){
x^3
}
cube(3)
x<-1:10
if(x>5){
x<-0
}
x<-1:10
if(x>5){
x<-2:11
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z<-10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
H(1,,)
h(1,,)
h(1,2,3)
h(1,2)
L=5
L<-5
h(1,2)
h(1)
h(1,2,1)
h(1,2,3)
h(1,,3)
h(1,0,2)
h(1,1,2)
h(0,0,0)
h(0,0,1)
L<-1
h(0,0,1)
L<-100
h(0,0,1)
hist(runif(1000))
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(runif(40)))
hist(mns)
hist(runif(1000))
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(runif(40)))
hist(mns)
hist(runif(1000))
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(runif(40)))
hist(mns)
hist(runif(1000))
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(runif(40)))
hist(mns)
hist(runif(1000))
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(runif(40)))
hist(mns)
hist(runif(1000))
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(runif(40)))
hist(mns)
hist(runif(1000))
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(runif(40)))
hist(mns)
hist(runif(1000))
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(runif(40)))
hist(mns)
hist(runif(1000))
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(runif(40)))
hist(mns)
hist(runif(1000))
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(runif(40)))
hist(mns)
hist(runif(1000))
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(runif(40)))
hist(mns)
hist(runif(1000))
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(runif(40)))
hist(mns)
hist(runif(1000))
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(runif(40)))
hist(mns)
hist(runif(1000))
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(runif(40)))
hist(mns)
hist(runif(1000))
hist(runif(1000))
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(runif(1000)))
hist(mns)
hist(runif(1000))
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(runif(1000)))
hist(mns)
hist(runif(1000))
mns = NULL
for (i in 1 : 10000) mns = c(mns, mean(runif(10000)))
hist(mns)
hist(runif(1000))
mns = NULL
for (i in 1 : 10000) mns = c(mns, mean(runif(10000)))
hist(mns)
hist(runif(1000))
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(runif(1000)))
hist(mns)
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(runif(1000)))
hist(mns)
mns = NULL
for (i in 1 : 10000) mns = c(mns, mean(runif(10000)))
hist(mns)
mns = NULL
for (i in 1 : 10000) mns = c(mns, mean(runif(10000)))
hist(mns)
mns = NULL
for (i in 1 : 10000) mns = c(mns, mean(runif(10000)))
hist(mns)
mns = NULL
for (i in 1 : 10000) mns = c(mns, mean(runif(10000)))
hist(mns)
mns = NULL
for (i in 1 : 10000) mns = c(mns, mean(runif(10000)))
hist(mns)
mns = NULL
for (i in 1 : 10000) mns = c(mns, mean(runif(10000)))
hist(mns)
mns = NULL
for (i in 1 : 10000) mns = c(mns, mean(runif(10000)))
hist(mns)
hist(rexp(1000, 0.4))
for (i in 1:1000) mns = c(mns, mean(rexp(1000, 0.4)))
hist(msn)
hist(mns)
for (i in 1:1000) mns = c(mns, mean(rexp(1000, 0.4)))
hist(mns)
for (i in 1:1000) mns = c(mns, mean(rexp(1000, 0.4)))
hist(mns)
for (i in 1:1000) mns = c(mns, std(rexp(1000, 0.4)))
for (i in 1:1000) mns = c(mns, stdev(rexp(1000, 0.4)))
for (i in 1:1000) mns = c(mns, sdev(rexp(1000, 0.4)))
for (i in 1:1000) mns = c(mns, st(rexp(1000, 0.4)))
for (i in 1:1000) mns = c(mns, stdv(rexp(1000, 0.4)))
for (i in 1:1000) mns = c(mns, var(rexp(1000, 0.4)))
hist(mns)
for (i in 1:1000) mns = c(mns, var(rexp(1000, 0.2)))
hist(mns)
for (i in 1:1000) mns = c(mns, mean(rexp(1000, 0.2)))
hist(mns)
hist(rexp(10000, 0.2))
for (i in 1:1000) mns = c(mns, mean(rexp(40, 0.2)))
hist(mns)
hist(mns)
for (i in 1:1000) mns = c(mns, mean(rexp(40, 0.2)))
hist(mns)
for (i in 1:1000) mns = c(mns, mean(rexp(40, 0.2)))
hist(mns)
for (i in 1:150000) mns = c(mns, mean(rexp(40, 0.2)))
hist(mns)
n <- means
n <- 1000
means <- cumsum(rnorm(n))/(1:n)
hist(means)
plot(means)
n <- 10000
means <- cumsum(rnorm(n))/(1:n)
plot(means)
means <- cumsum(rnorm(n)-mean(rnorm(n))^2/(1:n)
plot(means)
means <- cumsum((rnorm(n)-mean(rnorm(n)))^2/(1:n)^2
means <- cumsum((rnorm(n)-mean(rnorm(n)))^2/(1:n)^2
means <- cumsum((rnorm(n)-mean(rnorm(n)))^2)/(1:n)^2
plot(means)
hist(means)
plot(means)
means <- cumsum(rexp(0:1000, 0.2))/(1:1000)
for (i in 1:1000) mns = c(mns, rexp(40, 0.2)/(1:1000)))
for (i in 1:1000) mns = c(mns, rexp(40, 0.2)/(1:i)))
for (i in 1:1000) mns = c(mns, rexp(40, 0.2)/(i)))
for (i in 1:1000) mns = c(mns, rexp(40, 0.2)/(1:1000)))
means <- cumsum(rexp(40, 0.2))/(1:1000)
plot(means)
means <- cumsum(rexp(40, 0.2))/(1:10000)
plot(means)
means <- cumsum(rexp(40, 0.2))/(1:100)
means <- cumsum(rexp(40, 0.2))/(1:1000)
means <- cumsum(rexp(40, 0.2))/(1:500)
means <- cumsum(rexp(40, 0.2))/(1:600)
plot(means)
means <- cumsum(rexp(40, 0.2)/(1:500))
means <- cumsum(rexp(40, 0.2)/(1:100))
means <- cumsum(rexp(40, 0.2)/(1:1000))
plot(means)
means <- cumsum(rexp(40, 0.2)/(1:5000))
plot(means)
for (i in 1:1000) mns = c(msn, cumsum(rexp(40, 02)/(1:1000)))
for (i in 1:1000) mns = c(mns, cumsum(rexp(40, 02)/(1:1000)))
plot(mns)
hist(mns)
for (i in 1:1000) mns = c(mns, cumsum(rexp(40, 02)/(1:100)))
plot(means)
hist(mns)
plot(mns)
plot(mns)
nosim <- 1000
cfunc <- function(x, n) sqrt(n) * (mean(x) - 3.5) / 1.71
dat <- data.frame(
x = c(apply(matrix(sample(1 : 6, nosim * 10, replace = TRUE),
nosim), 1, cfunc, 10),
apply(matrix(sample(1 : 6, nosim * 20, replace = TRUE),
nosim), 1, cfunc, 20),
apply(matrix(sample(1 : 6, nosim * 30, replace = TRUE),
nosim), 1, cfunc, 30)
),
size = factor(rep(c(10, 20, 30), rep(nosim, 3))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
library(ggplot)
library(ggplot)
library(ggplot2)
library("ggplot2")
library("ggplot2")
library(ggplot2)
nosim <- 1000
cfunc <- function(x, n) sqrt(n) * (mean(x) - 3.5) / 1.71
dat <- data.frame(
x = c(apply(matrix(sample(1 : 6, nosim * 10, replace = TRUE),
nosim), 1, cfunc, 10),
apply(matrix(sample(1 : 6, nosim * 20, replace = TRUE),
nosim), 1, cfunc, 20),
apply(matrix(sample(1 : 6, nosim * 30, replace = TRUE),
nosim), 1, cfunc, 30)
),
size = factor(rep(c(10, 20, 30), rep(nosim, 3))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
nosim <- 1000
cfunc <- function(x, n) sqrt(n) * (mean(x) - 3.5) / 1.71
dat <- data.frame(
x = c(apply(matrix(sample(1 : 6, nosim * 10, replace = TRUE),
nosim), 1, cfunc, 10),
apply(matrix(sample(1 : 6, nosim * 20, replace = TRUE),
nosim), 1, cfunc, 20),
apply(matrix(sample(1 : 6, nosim * 30, replace = TRUE),
nosim), 1, cfunc, 1000)
),
size = factor(rep(c(10, 20, 30), rep(nosim, 3))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
nosim <- 1000
cfunc <- function(x, n) sqrt(n) * (mean(x) - 3.5) / 1.71
dat <- data.frame(
x = c(apply(matrix(sample(1 : 6, nosim * 10, replace = TRUE),
nosim), 1, cfunc, 10),
apply(matrix(sample(1 : 6, nosim * 20, replace = TRUE),
nosim), 1, cfunc, 20),
apply(matrix(sample(1 : 6, nosim * 30, replace = TRUE),
nosim), 1, cfunc, 1000)
),
size = factor(rep(c(10, 20, 1000), rep(nosim, 3))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
nosim <- 1000
cfunc <- function(x, n) sqrt(n) * (mean(x) - 3.5) / 1.71
dat <- data.frame(
x = c(apply(matrix(sample(1 : 6, nosim * 10, replace = TRUE),
nosim), 1, cfunc, 10),
apply(matrix(sample(1 : 6, nosim * 20, replace = TRUE),
nosim), 1, cfunc, 20),
apply(matrix(sample(1 : 6, nosim * 1000, replace = TRUE),
nosim), 1, cfunc, 1000)
),
size = factor(rep(c(10, 20, 1000), rep(nosim, 3))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
nosim <- 1000
cfunc <- function(x, n) sqrt(n) * (mean(x) - 3.5) / 1.71
dat <- data.frame(
x = c(apply(matrix(sample(1 : 6, nosim * 10, replace = TRUE),
nosim), 1, cfunc, 10),
apply(matrix(sample(1 : 6, nosim * 20, replace = TRUE),
nosim), 1, cfunc, 20),
apply(matrix(sample(1 : 6, nosim * 1000, replace = TRUE),
nosim), 1, cfunc, 1000)
),
size = factor(rep(c(10, 20, 1000), rep(nosim, 3))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
if(!file.exists("exdata-data-household_power_consumption.zip")) {
temp <- tempfile()
download.file("http://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",temp)
file <- unzip(temp)
unlink(temp)
}
dataSet <-read.table(file, sep=";", header = TRUE)
dataSet$Date <- as.Date(dataSet$Date, format="%d/%m/%Y")
dataSet <- dataSet[(dataSet$Date=="2007-02-01") | (dataSet$Date=="2007-02-02"),]
dataSet$Global_active_power <- as.numeric(as.character(dataSet$Global_active_power))
dataSet <- transform(dataSet, DateTime=as.POSIXct(paste(Date, Time)), "%d/%m/%Y %H:$M:$S")
plot_1 <- function() {
hist(dataSet$Global_active_power, main = paste("Global Active Power"), col="red", xlab="Global Active Power (kilowatts)")
dev.copy(png, file="plot_1.png", width=504, height=504)
dev.off()
}
plot_1()
plot_3 <- function() {
plot(dataSet$DateTime,dataSet$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering")
lines(dataSet$DateTime,dataSet$Sub_metering_2,col="red")
lines(dataSet$DateTime,dataSet$Sub_metering_3,col="blue")
legend("topright", col=c("black","red","blue"), c("Sub_metering_1  ","Sub_metering_2  ", "Sub_metering_3  "),lty=c(1,1), lwd=c(1,1))
dev.copy(png, file="plot3.png", width=504, height=504)
dev.off()
}
plot_3()
plot_3 <- function() {
plot(dataSet$DateTime,dataSet$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering")
lines(dataSet$DateTime,dataSet$Sub_metering_2,col="red")
lines(dataSet$DateTime,dataSet$Sub_metering_3,col="blue")
legend("topright", col=c("black","red","blue"), c("Sub_metering_1  ","Sub_metering_2  ", "Sub_metering_3  "),lty=c(1,1), lwd=c(1,1))
dev.copy(png, file="plot_3.png", width=504, height=504)
dev.off()
}
plot_3()
setwd("~/coursera/exploratory")
dataSet$Sub_metering_1 <- as.numeric(as.character(dataSet$Sub_metering_1))
dataSet$Sub_metering_2 <- as.numeric(as.character(dataSet$Sub_metering_2))
dataSet$Sub_metering_3 <- as.numeric(as.character(dataSet$Sub_metering_3))
plot_3 <- function() {
plot(dataSet$DateTime,dataSet$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering")
lines(dataSet$DateTime,dataSet$Sub_metering_2,col="red")
lines(dataSet$DateTime,dataSet$Sub_metering_3,col="blue")
legend("topright", col=c("black","red","blue"), c("Sub_metering_1  ","Sub_metering_2  ", "Sub_metering_3  "),lty=c(1,1), lwd=c(1,1))
dev.copy(png, file="plot_3.png", width=504, height=504)
dev.off()
}
plot_3()
plot_1 <- function() {
hist(dataSet$Global_active_power, main = paste("Global Active Power"), col="red", xlab="Global Active Power (kilowatts)")
dev.copy(png, file="plot_1.png", width=504, height=504)
dev.off()
}
plot_1()
plot_3 <- function() {
plot(dataSet$DateTime,dataSet$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering")
lines(dataSet$DateTime,dataSet$Sub_metering_2,col="red")
lines(dataSet$DateTime,dataSet$Sub_metering_3,col="blue")
legend("topright", col=c("black","red","blue"), c("Sub_metering_1  ","Sub_metering_2  ", "Sub_metering_3  "),lty=c(1,1), lwd=c(1,1))
dev.copy(png, file="plot_3.png", width=668, height=504)
dev.off()
}
plot_3()
plot_4 <- function() {
par(mfrow=c(2,2))
## Subplot 4.1
plot(dataSet$DateTime,dataSet$Global_active_power, type="l", xlab="", ylab="Global Active Power")
## Subplot 4.2
plot(dataSet$DateTime,dataSet$Voltage, type="l", xlab="datetime", ylab="Voltage")
## Subplot 4.3
plot(dataSet$DateTime,dataSet$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering")
lines(dataSet$DateTime,dataSet$Sub_metering_2,col="red")
lines(dataSet$DateTime,dataSet$Sub_metering_3,col="blue")
legend("topright", col=c("black","red","blue"), c("Sub_metering_1  ","Sub_metering_2  ", "Sub_metering_3  "),lty=c(1,1), bty="n", cex=.5) #bty removes the box, cex shrinks the text, spacing added after labels so it renders correctly
## Subplot 4.4
plot(dataSet$DateTime,dataSet$Global_reactive_power, type="l", xlab="datetime", ylab="Global_reactive_power")
dev.copy(png, file="plot_4.png", width=504, height=504)
dev.off()
}
plot_4()
plot_4 <- function() {
par(mfrow=c(2,2))
## Subplot 4.1
plot(dataSet$DateTime,dataSet$Global_active_power, type="l", xlab="", ylab="Global Active Power")
## Subplot 4.2
plot(dataSet$DateTime,dataSet$Voltage, type="l", xlab="datetime", ylab="Voltage")
## Subplot 4.3
plot(dataSet$DateTime,dataSet$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering")
lines(dataSet$DateTime,dataSet$Sub_metering_2,col="red")
lines(dataSet$DateTime,dataSet$Sub_metering_3,col="blue")
legend("topright", col=c("black","red","blue"), c("Sub_metering_1  ","Sub_metering_2  ", "Sub_metering_3  "),lty=c(1,1), bty="n", cex=.7)
## Subplot 4.4
plot(dataSet$DateTime,dataSet$Global_reactive_power, type="l", xlab="datetime", ylab="Global_reactive_power")
dev.copy(png, file="plot_4.png", width=504, height=504)
dev.off()
}
plot_4()
plot_4 <- function() {
par(mfrow=c(2,2))
## Subplot 4.1
plot(dataSet$DateTime,dataSet$Global_active_power, type="l", xlab="", ylab="Global Active Power")
## Subplot 4.2
plot(dataSet$DateTime,dataSet$Voltage, type="l", xlab="datetime", ylab="Voltage")
## Subplot 4.3
plot(dataSet$DateTime,dataSet$Sub_metering_1, type="l", xlab="", ylab="Energy sub metering")
lines(dataSet$DateTime,dataSet$Sub_metering_2,col="red")
lines(dataSet$DateTime,dataSet$Sub_metering_3,col="blue")
legend("topright", col=c("black","red","blue"), c("Sub_metering_1  ","Sub_metering_2  ", "Sub_metering_3  "),lty=c(1,1), bty="n", cex=.7)
## Subplot 4.4
plot(dataSet$DateTime,dataSet$Global_reactive_power, type="l", xlab="datetime", ylab="Global_reactive_power")
dev.copy(png, file="plot_4.png", width=668, height=504)
dev.off()
}
plot_4()
source(plot3.R)
source("plot3.R")
source("plot1.R")
source("plot2.R")
source("plot3.R")
source("plot4.R")
source("plot1.R")
